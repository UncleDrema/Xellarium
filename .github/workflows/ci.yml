name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose -y

      - name: Build containers
        run: |
          docker-compose -f docker-compose.yml build

  unit_tests:
    runs-on: ubuntu-latest
    needs: build  # Ждём завершения job build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run unit tests
        run: docker-compose -f docker-compose.yml up -d xellarium-test-db && docker-compose run --rm unit-tests

      - name: Clean up after unit tests
        run: docker-compose down -v
        if: always()  # Запускается всегда

  integration_tests:
    runs-on: ubuntu-latest
    needs: unit_tests  # Ждём завершения job unit_tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run integration tests
        run: docker-compose -f docker-compose.yml up -d xellarium-test-db && docker-compose run --rm integration-tests

      - name: Clean up after integration tests
        run: docker-compose down -v
        if: always()  # Запускается всегда

  e2e_tests:
    runs-on: ubuntu-latest
    needs: integration_tests  # Ждём завершения job integration_tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run E2E tests
        run: docker-compose -f docker-compose.yml up -d test-api && docker-compose run --rm e2e-tests

      - name: Clean up after E2E tests
        run: docker-compose down -v
        if: always()  # Запускается всегда
