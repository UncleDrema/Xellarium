worker_processes 1;

events {
    worker_connections 1024;
}

# 1
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
            
        location /admin/ {
            proxy_set_header X-Script-Name /admin;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;
            proxy_pass http://pgadmin:80/;
            proxy_redirect off;
        }
        
        # legacy client
        location /legacy/ {
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;
            proxy_pass http://host.docker.internal:5039/;
            proxy_redirect off;
        }
        
        location /_framework/ {
            proxy_pass http://host.docker.internal:5039/_framework/;
        }
        
        location /api/v1/ {
            resolver 127.0.0.11 valid=30s;
            proxy_pass http://api:8080/api/v1/;
            proxy_redirect default;
        }
    
        location /api/v2/ {
            resolver 127.0.0.11 valid=30s;
            proxy_pass http://api:8080/api/v2/;
            proxy_redirect default;
        }
        
        location = / {
            try_files /index.html =404;
        }
        
        # Настройка для страницы documentation.html
        location = /documentation {
            try_files /documentation.html =404;
        }
        
        location = /documentation/ {
            try_files /documentation.html =404;
        }
        
        location ~ ^/documentation/(.*) {
            try_files /$1 =404;
        }
        
        # Обработка всех других запросов (например, для img и других статических файлов)
        location / {
            try_files $uri $uri/ =404;
        }
        
        location = /test {
            try_files /index.html =404;
        }
        
        location = /test/ {
            try_files /index.html =404;
        }
        
        location /status {
            stub_status on;
        }
    }
}
